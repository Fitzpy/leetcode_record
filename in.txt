#include <bits/stdc++.h>

using namespace std;

int T, n;
map<int, string> mp;

int main() {
    cin >> T;
    while (T--) {
        cin >> n;
        priority_queue<int> que;
        while (!que.empty()) que.pop();
        mp.clear();
        for (int i = 0; i < n; i++) que.push(-i);
        while (n--) {
            string op;
            cin >> op;
            if (op == "open") {
                string FileName;
                cin >> FileName;
                while (mp.count((-que.top()))) que.pop();
                mp[-que.top()] = FileName;
                printf("%d\n", -que.top());
                que.pop();
            }
            if (op == "dup") {
                int fd;
                cin >> fd;
                while (mp.count((-que.top()))) que.pop();
                mp[-que.top()] = mp[fd];
                printf("%d\n", -que.top());
                que.pop();
            }
            if (op == "dup2") {
                int fd, new_fd;
                cin >> fd >> new_fd;
                mp[new_fd] = mp[fd];
            }
            if (op == "close") {
                int fd;
                cin >> fd;
                mp.erase(fd);
                que.push(-fd);
            }
            if (op == "query") {
                int fd;
                cin >> fd;
                cout << mp[fd] << endl;
            }
        }
    }
    return 0;
}

2
10
open libc.so
open libm.so
open libdl.so
dup 2
dup2 0 2
close 0
query 1
query 2
query 3
open log.txt
10
open output.txt
dup2 0 1000000
close 0
open output2.txt
dup2 0 100000
close 0
open 1.txt
dup 100000
query 1
query 0